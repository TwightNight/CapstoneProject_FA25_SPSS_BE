// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SPSS.BusinessObject.Context;

#nullable disable

namespace SPSS.BusinessObject.Migrations
{
    [DbContext(typeof(SkinAnalysisDBContext))]
    partial class SkinAnalysisDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SPSS.BusinessObject.Models.ProductCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("ParentCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("SPSS.BusinessObject.Models.ProductForSkinType", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SkinTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ProductId" }, "IX_ProductForSkinTypes_ProductId");

                    b.HasIndex(new[] { "SkinTypeId" }, "IX_ProductForSkinTypes_SkinTypeId");

                    b.ToTable("ProductForSkinTypes");
                });

            modelBuilder.Entity("SPSS.BusinessObject.Models.QuizOption", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("QuizQuestionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "QuizQuestionId" }, "IX_QuizOptions_QuizQuestionId");

                    b.ToTable("QuizOptions");
                });

            modelBuilder.Entity("SPSS.BusinessObject.Models.QuizQuestion", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("QuizSetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "QuizSetId" }, "IX_QuizQuestions_QuizSetId");

                    b.ToTable("QuizQuestions");
                });

            modelBuilder.Entity("SPSS.BusinessObject.Models.QuizResult", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("QuizSetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Score")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("SkinTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "QuizSetId" }, "IX_QuizResults_QuizSetId");

                    b.HasIndex(new[] { "SkinTypeId" }, "IX_QuizResults_SkinTypeId");

                    b.ToTable("QuizResults");
                });

            modelBuilder.Entity("SPSS.BusinessObject.Models.QuizSet", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("QuizSets");
                });

            modelBuilder.Entity("SPSS.BusinessObject.Models.SkinAnalysisIssue", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("IssueName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Severity")
                        .HasColumnType("int");

                    b.Property<Guid>("SkinAnalysisResultId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "SkinAnalysisResultId" }, "IX_SkinAnalysisIssues_SkinAnalysisResultId");

                    b.ToTable("SkinAnalysisIssues");
                });

            modelBuilder.Entity("SPSS.BusinessObject.Models.SkinAnalysisRecommendation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PriorityScore")
                        .HasColumnType("int");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RecommendationReason")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid>("SkinAnalysisResultId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ProductId" }, "IX_SkinAnalysisRecommendations_ProductId");

                    b.HasIndex(new[] { "SkinAnalysisResultId" }, "IX_SkinAnalysisRecommendations_SkinAnalysisResultId");

                    b.ToTable("SkinAnalysisRecommendations");
                });

            modelBuilder.Entity("SPSS.BusinessObject.Models.SkinAnalysisResult", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AcneScore")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("DarkCircleScore")
                        .HasColumnType("int");

                    b.Property<int>("DarkSpotScore")
                        .HasColumnType("int");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("DrynessLevel")
                        .HasColumnType("int");

                    b.Property<string>("FullAnalysisJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HealthScore")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("OilinessLevel")
                        .HasColumnType("int");

                    b.Property<int>("SensitivityLevel")
                        .HasColumnType("int");

                    b.Property<Guid>("SkinTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("WrinkleScore")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "SkinTypeId" }, "IX_SkinAnalysisResults_SkinTypeId");

                    b.HasIndex(new[] { "UserId" }, "IX_SkinAnalysisResults_UserId");

                    b.ToTable("SkinAnalysisResults");
                });

            modelBuilder.Entity("SPSS.BusinessObject.Models.SkinType", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("SkinTypes");
                });

            modelBuilder.Entity("SPSS.BusinessObject.Models.SkinTypeRoutineStep", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Instruction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<Guid>("SkinTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StepName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CategoryId" }, "IX_SkinTypeRoutineSteps_CategoryId");

                    b.HasIndex(new[] { "SkinTypeId" }, "IX_SkinTypeRoutineSteps_SkinTypeId");

                    b.ToTable("SkinTypeRoutineSteps");
                });

            modelBuilder.Entity("SPSS.BusinessObject.Models.ProductForSkinType", b =>
                {
                    b.HasOne("SPSS.BusinessObject.Models.SkinType", "SkinType")
                        .WithMany("ProductForSkinTypes")
                        .HasForeignKey("SkinTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SkinType");
                });

            modelBuilder.Entity("SPSS.BusinessObject.Models.QuizOption", b =>
                {
                    b.HasOne("SPSS.BusinessObject.Models.QuizQuestion", "QuizQuestion")
                        .WithMany("QuizOptions")
                        .HasForeignKey("QuizQuestionId");

                    b.Navigation("QuizQuestion");
                });

            modelBuilder.Entity("SPSS.BusinessObject.Models.QuizQuestion", b =>
                {
                    b.HasOne("SPSS.BusinessObject.Models.QuizSet", "QuizSet")
                        .WithMany("QuizQuestions")
                        .HasForeignKey("QuizSetId");

                    b.Navigation("QuizSet");
                });

            modelBuilder.Entity("SPSS.BusinessObject.Models.QuizResult", b =>
                {
                    b.HasOne("SPSS.BusinessObject.Models.QuizSet", "QuizSet")
                        .WithMany("QuizResults")
                        .HasForeignKey("QuizSetId");

                    b.HasOne("SPSS.BusinessObject.Models.SkinType", "SkinType")
                        .WithMany("QuizResults")
                        .HasForeignKey("SkinTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuizSet");

                    b.Navigation("SkinType");
                });

            modelBuilder.Entity("SPSS.BusinessObject.Models.SkinAnalysisIssue", b =>
                {
                    b.HasOne("SPSS.BusinessObject.Models.SkinAnalysisResult", "SkinAnalysisResult")
                        .WithMany("SkinAnalysisIssues")
                        .HasForeignKey("SkinAnalysisResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SkinAnalysisResult");
                });

            modelBuilder.Entity("SPSS.BusinessObject.Models.SkinAnalysisRecommendation", b =>
                {
                    b.HasOne("SPSS.BusinessObject.Models.SkinAnalysisResult", "SkinAnalysisResult")
                        .WithMany("SkinAnalysisRecommendations")
                        .HasForeignKey("SkinAnalysisResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SkinAnalysisResult");
                });

            modelBuilder.Entity("SPSS.BusinessObject.Models.SkinAnalysisResult", b =>
                {
                    b.HasOne("SPSS.BusinessObject.Models.SkinType", "SkinType")
                        .WithMany("SkinAnalysisResults")
                        .HasForeignKey("SkinTypeId")
                        .IsRequired();

                    b.Navigation("SkinType");
                });

            modelBuilder.Entity("SPSS.BusinessObject.Models.SkinTypeRoutineStep", b =>
                {
                    b.HasOne("SPSS.BusinessObject.Models.ProductCategory", "Category")
                        .WithMany("SkinTypeRoutineSteps")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPSS.BusinessObject.Models.SkinType", "SkinType")
                        .WithMany("SkinTypeRoutineSteps")
                        .HasForeignKey("SkinTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("SkinType");
                });

            modelBuilder.Entity("SPSS.BusinessObject.Models.ProductCategory", b =>
                {
                    b.Navigation("SkinTypeRoutineSteps");
                });

            modelBuilder.Entity("SPSS.BusinessObject.Models.QuizQuestion", b =>
                {
                    b.Navigation("QuizOptions");
                });

            modelBuilder.Entity("SPSS.BusinessObject.Models.QuizSet", b =>
                {
                    b.Navigation("QuizQuestions");

                    b.Navigation("QuizResults");
                });

            modelBuilder.Entity("SPSS.BusinessObject.Models.SkinAnalysisResult", b =>
                {
                    b.Navigation("SkinAnalysisIssues");

                    b.Navigation("SkinAnalysisRecommendations");
                });

            modelBuilder.Entity("SPSS.BusinessObject.Models.SkinType", b =>
                {
                    b.Navigation("ProductForSkinTypes");

                    b.Navigation("QuizResults");

                    b.Navigation("SkinAnalysisResults");

                    b.Navigation("SkinTypeRoutineSteps");
                });
#pragma warning restore 612, 618
        }
    }
}
